{"version":3,"sources":["assets/Vinayak.jpeg","assets/Anil.jpg","components/Redux/Actions.ts","components/NewsFetch/news.ts","components/NewsFetch/Fetch.ts","components/Modal/Popup.tsx","components/Firebase/context.tsx","components/Firebase/Firebase.ts","components/Firebase/index.ts","components/Card/Post.tsx","components/MainBody/Display.tsx","components/Buttons/ButtonCountry.tsx","components/Auth/Signout.tsx","components/Header/head.tsx","components/Loader/Loader.tsx","components/ErrorHandler/ErrorHandler.tsx","components/Chat/Receive.tsx","components/Chat/Send.tsx","components/Chat/ChatBox.tsx","components/MainBody/Main.tsx","components/Sources/SourceCard.tsx","components/Sources/DisplaySources.tsx","components/Sources/Sources.tsx","components/TeamPage/Person.tsx","components/TeamPage/TeamInfo.tsx","components/Auth/SignUpForm.tsx","components/Auth/SignUpPage.tsx","components/Auth/SignInForm.tsx","components/Auth/SignInPage.tsx","components/UserPage/Profile.tsx","App.tsx","serviceWorker.ts","components/Redux/Reducers.ts","index.tsx"],"names":["module","exports","setCountry","newCode","type","val","setPage","page","setArticles","articles","setLiked","setLoading","status","setNewsEnd","setErrorExist","setLoginStatus","setUserId","uid","setCookieLoad","setMessages","messages","setLastLiked","post","setToast","setName","country","page_num","a","url","fetch","then","response","json","result","search","fetchNews","getNews","this","props","length","catch","error","console","log","fetchNewsSearch","getNewsSearch","fetchLiked","firebase","getDataFromDatabase","Popup","window","open","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","align","cardData","title","Body","alt","style","height","marginBottom","src","imageurl","content","description","Footer","marginRight","FacebookShareButton","quote","color","TwitterShareButton","LinkedinShareButton","source","summary","Button","onClick","goToUrl","variant","onHide","React","Component","FirebaseContext","createContext","withFirebase","Consumer","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","auth","database","prov","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doGuestSignIn","signInAnonymously","doGoogleSignIn","signInWithPopup","addName","name","currentUser","updateProfile","displayName","getUID","doSignOut","signOut","addCookieToDatabase","cookie","data","collection","doc","set","addNewUser","app","initializeApp","firestore","GoogleAuthProvider","realDatabase","messageReference","ref","child","providerData","forEach","profile","get","curdoc","exists","Promise","resolve","message","newMessage","userName","push","Post","state","enter","setState","backgroundColor","textColor","leave","likePost","postData","cookies","liked","isLiked","Object","assign","unlikePost","likedPosts","likedPostsComplete","urlCurrent","index","indexOf","splice","filter","obj","path","modalShow","includes","show","bind","urlToImage","Card","bg","width","text","className","Img","onMouseEnter","onMouseLeave","Text","marginLeft","connect","isLoggedIn","dispatch","actiontypes","Display","array","idx","key","isLoading","undefined","ButtonCountry","currentCountry","code","onChange","SignOutButton","history","withRouter","Head","input","handleSubmit","event","preventDefault","searchNews","value","target","reset","onSubmit","htmlFor","ownprops","errorExist","Loader","loading","newsEnd","ErrorHandler","Receive","getMessages","limitToLast","on","snapshot","newmessages","cur","user","rendermessages","map","ListItem","ListItemText","wordBreak","primary","List","INITIAL_STATE","Send","sendMessage","TextField","placeholder","split","default","Main","debounce","offset","onBottom","minSize","defaultSize","SelectiveDisplay","ownProps","SourceCard","DisplaySources","CardColumns","Sources","sources","fetchSources","nextProps","Person","marginTop","imageSrc","Info","Anil","Vinayak","passwordOne","passwordTwo","SignUpForm","guestSignIn","login","guestLogin","googleSignIn","signInSync","showPassword","passwordComponent","document","getElementById","confirmpasswordComponent","getCookieFromDatabase","isInvalid","Container","component","maxWidth","CssBaseline","Avatar","Typography","disabled","paddingLeft","paddingRight","SignUpPage","to","SignInForm","getUserName","SignInPage","Profile","removeToast","undoUnlike","lastLiked","Toast","showToast","onClose","delay","autohide","withCookies","App","checkPrevLogin","exact","render","Boolean","location","hostname","match","initialState","cookieLoaded","newsApp","action","store","createStore","ReactDOM","Provider","CookiesProvider","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb9af49d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vinayak.5a157650.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Anil.d4ab7329.jpg\";","export const CHANGE_COUNTRY = 'CHANGE_COUNTRY'\nexport const CUR_PAGE = 'CUR_PAGE'\nexport const SET_ARTICLES = 'SET_ARTICLES'\nexport const SET_LIKED = 'SET_LIKED'\nexport const LOADING = 'LOADING'\nexport const SET_NEWSEND='SET_NEWSEND'\nexport const SET_ERROREXIST='SET_ERROREXIST'\nexport const SET_LOGIN='SET_LOGIN'\nexport const SET_UID='SET_UID'\nexport const SET_LIKED_URL='SET_LIKED_URL'\nexport const SET_COOKIE_LOAD='SET_COOKIE_LOAD'\nexport const SET_MESSAGES='SET_MESSAGES'\nexport const SET_LAST_LIKED='SET_LAST_LIKED'\nexport const SET_TOAST='SET_TOAST'\nexport const SET_NAME='SET_NAME'\n\n\nexport function setCountry(newCode:string) {\n  return { type: CHANGE_COUNTRY, val: newCode }\n}\n\nexport function setPage(page: number) {\n  return { type: CUR_PAGE, val: page }\n}\n\nexport function setArticles(articles: Array<Object>) {\n  return { type: SET_ARTICLES, val: articles }\n}\n\nexport function setLiked(articles: Array<Object>) {\n  return { type: SET_LIKED, val: articles }\n}\n\nexport function setLoading(status: Boolean) {\n    return { type: LOADING, val: status }\n}\n\nexport function setNewsEnd(status: Boolean) {\n  return { type: SET_NEWSEND, val: status }\n}\n\nexport function setErrorExist(status: Boolean) {\n  return { type: SET_ERROREXIST, val: status }\n}\n\nexport function setLoginStatus(status: Boolean) {\n  return { type: SET_LOGIN, val: status }\n}\n\nexport function setUserId(uid: string) {\n  return { type: SET_UID, val: uid }\n}\n\nexport function setCookieLoad(status: Boolean) {\n  return { type: SET_COOKIE_LOAD, val: status }\n}\n\nexport function setMessages(messages: Array<String>) {\n  return { type: SET_MESSAGES, val: messages }\n}\n\nexport function setLastLiked(post: NewsPost) {\n  return { type: SET_LAST_LIKED, val: post }\n}\n\nexport function setToast(status: Boolean) {\n  return { type: SET_TOAST, val: status }\n}\n\nexport function setName(status: string) {\n  return { type: SET_NAME, val: status }\n}\n","export async function getNews(country: string,page_num: number){\n    const url=`https://tinyurl.com/news-appfk/news/?country=${country}&page=${page_num}`\n    let result=await fetch(url).then(response=> response.json());\n    return result.articles;\n}\n\nexport async function getNewsSearch(search: string){\n    const url=`https://tinyurl.com/news-appfk/news/?search=${search}`\n    let result=await fetch(url).then(response=> response.json());\n    return result.articles;\n}","import {getNews,getNewsSearch} from './news';\n\nexport function fetchNews(this: any) {\n    getNews(this.props.country,this.props.page)\n    .then((articles: Array<Object>)=> {\n      this.props.setArticles([...this.props.articles,...articles]);\n      this.props.setLoading(false);\n      if(articles.length<10){\n        this.props.setNewsEnd(true);\n      }\n    })\n    .catch(error=>{\n      console.log(\"ERROR\",error);\n      this.props.setLoading(false);\n      this.props.setErrorExist(true);\n    })\n    this.props.setPage(this.props.page+1);\n};\n\nexport function fetchNewsSearch(this: any,search: string){\n    getNewsSearch(search)\n    .then((articles: Array<Object>)=> {\n      this.props.setArticles(articles);\n      this.props.setLoading(false);\n      this.props.setNewsEnd(true);\n      this.props.setPage(this.props.page+1);\n    })\n    .catch(error=>{\n      console.log(error);\n      this.props.setLoading(false);\n      this.props.setErrorExist(true);\n    })\n}\n\n export function fetchLiked(this:any){\n        this.props.firebase.getDataFromDatabase(this.props.uid)\n        .then((response:Object)=>this.props.setLiked(response))\n        .catch((error: String)=>{\n          console.log(error);\n        })\n      }","import React from 'react'\nimport Modal from  'react-bootstrap/Modal'\nimport Button from  'react-bootstrap/Button'\nimport { FacebookShareButton, TwitterShareButton, LinkedinShareButton } from \"react-share\";\nimport {FaFacebookF,FaTwitter, FaLinkedin} from 'react-icons/fa';\n\ninterface CardData{\n    url: string;\n    imageurl : string;\n    title: string;\n    content: string;\n    description: string;\n}\n\ninterface PopupProps{\n    cardData: CardData;\n    onHide: () => void;\n}  \n\nclass Popup extends React.Component<PopupProps>{\n\n    goToUrl(url: string): void{\n        window.open(url,'_blank');\n    }\n\n    render(){\n        return(\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                <div align = 'center'>\n                    {this.props.cardData.title}\n                </div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div align='center'>\n                    <img alt='' style={{height:250, marginBottom:10}} src={this.props.cardData.imageurl}/>\n                    <p>\n                        {this.props.cardData.content ? this.props.cardData.content : this.props.cardData.description}\n                    </p>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <div style={{marginRight:190}}>\n                    <FacebookShareButton \n                        style={{marginRight:20}}\n                        url={this.props.cardData.url}\n                        quote={this.props.cardData.title}>\n                        <FaFacebookF size={23} color='#3b5998' />\n                    </FacebookShareButton >\n                    <TwitterShareButton\n                        style={{marginRight:20}}\n                        url={this.props.cardData.url}\n                        title={this.props.cardData.title}>\n                        <FaTwitter size={24} color='#00acee'/>\n                    </TwitterShareButton>\n                    <LinkedinShareButton\n                        style={{marginRight:20}}\n                        url={this.props.cardData.url}\n                        source={this.props.cardData.url}\n                        title={this.props.cardData.title }\n                        summary={this.props.cardData.description}>\n                        <FaLinkedin size={24} color='#0e76a8'/>\n                    </LinkedinShareButton>\n                </div>\n                <div style={{marginRight:240}}>\n                    <Button  onClick={()=>this.goToUrl(this.props.cardData.url)}>Go To News</Button>\n                </div>\n                <Button variant='danger' onClick={this.props.onHide}>Close</Button>\n            </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default Popup;","import React from 'react';\n \nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => (props: any) => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n \nexport default FirebaseContext;","import app from 'firebase/app';\nimport firebase from 'firebase'\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { NewsPost } from '../Card/Post';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBMaY68-cCUJVGn9U_waEydkzQrAl1Xc1M\",\n  authDomain: \"news-app-21a45.firebaseapp.com\",\n  databaseURL: \"https://news-app-21a45.firebaseio.com\",\n  projectId: \"news-app-21a45\",\n  storageBucket: \"news-app-21a45.appspot.com\",\n  messagingSenderId: \"570938653373\",\n  appId: \"1:570938653373:web:f22ce001cfb58a5e3595d4\",\n  measurementId: \"G-4HVVFZVBF3\"\n};\n\nclass Firebase {\n\t  public auth: any;\n\t  public database: any;\n\t  public prov: any;\n\n    constructor() {\n      app.initializeApp(firebaseConfig);\n      this.auth=app.auth();\n      this.database=app.firestore();\n      this.prov = new app.auth.GoogleAuthProvider();\n      this.realDatabase=firebase.database(app);\n      this.messageReference=this.realDatabase.ref().child('messages')\n    }\n\n    doCreateUserWithEmailAndPassword =  (email: string, password: string) =>\n      this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email: string, password: string) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doGuestSignIn = () =>\n    this.auth.signInAnonymously()\n\n    doGoogleSignIn = () =>\n      this.auth.signInWithPopup(this.prov)\n\n    addName = (name) =>{\n      var user = this.auth.currentUser;\n      user.updateProfile({\n        displayName: name\n      })\n    }\n\n    async getUserName(setName: Function){\n      const user= await this.auth.currentUser;\n      user.providerData.forEach(function (profile) {\n        setName(profile.displayName)\n        });\n    }\n\n    getUID = () =>{\n      const user=this.auth.currentUser\n      return user.uid\n    }\n\n    doSignOut = () => {\n      this.auth.signOut();\n    }\n\n    addCookieToDatabase = (uid: string,cookie: Array<string>=[],data: Array<NewsPost>=[]) =>\n    {\n      this.database.collection('users').doc(uid).set({\n        cookie: cookie,\n        data: data\n      })\n    }\n\n    addNewUser=(uid: string)=>{\n      this.database.collection(\"users\").doc(uid).set({\n        cookie: [],\n        data: []\n      })\n    }\n\n    async getCookieFromDatabase(uid: string)\n    {\n      var curdoc = await this.database.collection(\"users\").doc(uid).get()\n      if(curdoc.exists)\n        return Promise.resolve(curdoc.data().cookie);\n      else\n        return Promise.resolve([])\n    }\n\n    async getDataFromDatabase(uid: string)\n    {\n      var curdoc = await this.database.collection(\"users\").doc(uid).get()\n      if(curdoc.exists)\n        return Promise.resolve([...curdoc.data().data]);\n      else\n        return Promise.resolve([])\n    }\n\n    sendMessage(message: string,name: string) {\n      if (message) {\n        var newMessage = {\n          userName: name,\n          message: message,\n        }\n        this.messageReference.push(newMessage);\n      }\n    }\n\n}\n\nexport default Firebase","import FirebaseContext,{withFirebase} from './context';\nimport Firebase from './Firebase';\n \nexport default Firebase;\n \nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Popup from '../Modal/Popup'\nimport Button from  'react-bootstrap/Button'\nimport {MdFavoriteBorder,MdFavorite} from 'react-icons/md'\nimport {withFirebase} from '../Firebase';\nimport {connect} from 'react-redux';\nimport './Post.css';\nimport * as actiontypes from '../Redux/Actions';\nimport { StateTypes } from '../Redux/Reducers';\n\nexport interface NewsPost{\n    title: string;\n    urlToImage: string;\n    description: string;\n    url: string;\n    cookies: Object;\n    content: string;\n    imageurl: String\n    name: string;\n}\n\ninterface Props{\n    cookies: Object,\n    url: string,\n    title: string,\n    description: string,\n    imageurl: string,\n    uid: string,\n    liked: Array<NewsPost>,\n    setLiked: Function\n}\n\nclass Post extends React.Component<Props>{\n    public state: Object;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n          backgroundColor: \"light\",\n          textColor: 'dark',\n          modalShow: false,\n          isLiked: ((this.props.cookies).get('testing')).includes(this.props.url) || this.props.show==='likedOnly',\n          \n        };\n        this.enter=this.enter.bind(this);\n        this.leave=this.leave.bind(this);\n        this.likePost=this.likePost.bind(this);\n        this.unlikePost=this.unlikePost.bind(this);\n    }\n\n    enter = () =>{\n        this.setState({backgroundColor: \"info\",textColor: 'white'})\n    }  \n    \n    leave = () =>{\n        this.setState({backgroundColor: \"light\",textColor: 'dark'})\n    }\n\n    goToUrl(url: string){\n        window.open(url,'_blank');\n    }\n\n    likePost = (postData) => {\n        this.props.firebase.addCookieToDatabase(this.props.uid,\n                    [...(this.props.cookies).get('testing'),this.props.url],[...(this.props.liked),postData]);\n        (this.props.cookies).set('testing',[...(this.props.cookies).get('testing'),this.props.url]);\n        this.setState({isLiked: true});\n        this.props.setLiked([...this.props.liked,Object.assign({}, postData)])\n    }\n\n    unlikePost = (postData) => {\n        var likedPosts: Array<string> = (this.props.cookies).get('testing')\n        var likedPostsComplete = this.props.liked\n        const urlCurrent = this.props.url\n        const index: number = likedPosts.indexOf(urlCurrent);\n        if (index > -1) {\n            likedPosts.splice(index, 1);\n        }\n        likedPostsComplete = likedPostsComplete.filter(function( obj ) {\n            return obj.url !== urlCurrent;\n        });\n        (this.props.cookies).set('testing',likedPosts,{path: '/'})\n        this.props.setLiked([...likedPostsComplete])\n        this.props.firebase.addCookieToDatabase(this.props.uid,likedPosts,likedPostsComplete)\n        this.setState({...this.state,\n                    isLiked: false})        \n        this.props.setLastLiked(postData)\n        this.props.setToast(true)\n\n    }\n\n    render(){\n        var postData= {\n            title: this.props.title,\n            description: this.props.description,\n            urlToImage: this.props.imageurl,\n            url: this.props.url\n          }\n        return(\n        <div>\n            <Card bg={this.state.backgroundColor}\n                style={{width: '24rem', }}\n                text={this.state.textColor}\n                className='Card'\n                >\n                <Card.Img \n                    onMouseEnter={this.enter}\n                    onMouseLeave={this.leave}\n                    variant=\"top\" \n                    src={this.props.imageurl}\n                    onClick={()=>this.setState({modalShow: true})} />\n                <Card.Body \n                    onMouseEnter={this.enter}\n                    onMouseLeave={this.leave}\n                    onClick={()=>this.setState({modalShow: true})}>\n                    <Card.Title>{this.props.title}</Card.Title>\n                    <Card.Text>{this.props.description}</Card.Text>\n                </Card.Body>   \n                <Card.Footer>\n                    <div className='row'>\n                        <div align='left' style={{marginLeft:30}}>\n                            {this.state.isLiked|| this.props.show==='likedOnly' ? \n                                    <MdFavorite color='#C70039' size={30} onClick={()=> this.unlikePost(postData)}/> : \n                                    <MdFavoriteBorder color='#C70039' size={30} onClick={()=> this.likePost(postData)}/> }\n                        </div>\n                        <div align='right' style={{marginLeft:180}}>\n                            <Button variant='danger' onClick={()=>this.goToUrl(this.props.url)}>Go To News</Button>\n                        </div>\n                    </div>\n                </Card.Footer> \n\n            </Card>\n            <Popup show={this.state.modalShow} \n                    onHide={()=> this.setState({modalShow: false})}\n                    cardData={this.props}/>\n        </div>    \n    )}\n}\n\n\nconst mapStateToProps=(state: StateTypes)=>{\n    return{\n      isLoggedIn: state.isLoggedIn,\n      uid: state.uid,\n      liked: state.liked,\n    };\n  }\n  \nconst mapDispatchToProps=dispatch=>{\n    return{\n        setLoginStatus: (val: boolean)=>dispatch(actiontypes.setLoginStatus(val)),\n        setUserId: (val: string)=>dispatch(actiontypes.setUserId(val)),\n        setLiked: (val: Array<NewsPost>)=>dispatch(actiontypes.setLiked(val)),\n        setLastLiked: (val: NewsPost)=>dispatch(actiontypes.setLastLiked(val)),\n        setToast: (val: NewsPost)=>dispatch(actiontypes.setToast(val))\n    };\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withFirebase(Post))","import React from 'react';\nimport Post from '../Card/Post';\nimport {connect} from 'react-redux';\nimport {StateTypes} from '../Redux/Reducers'\nimport {NewsPost} from '../Card/Post'\n\ninterface DisplayProps extends StateTypes{\n    show: string;\n    cookies: Object;\n}\n\nclass Display extends React.Component<DisplayProps>{\n   \n    render(){\n        const array: Array<NewsPost> = this.props.show==='likedOnly' ? this.props.liked : this.props.articles;\n        let content:Array<Object> = [];\n        array.forEach((post: NewsPost,idx: number) => {\n            content.push(\n                <div className=\"col-sm py-3\" key={idx}>\n                    <Post key={idx} \n                        title={post.title} \n                        imageurl={post.urlToImage} \n                        description={post.description} \n                        url={post.url} \n                        content={post.content} \n                        cookies={this.props.cookies}\n                        show={this.props.show}/>\n                </div>\n            )\n            if ((idx+1)%3===0) {content.push(<div key={array.length+idx} className=\"w-100\"></div>)}\n        })\n        if(this.props.isLoading || array===undefined)\n            return <div></div>;\n        else{\n            return(     \n                <div className='row' align='center'>\n                    {content}\n                </div>\n            )}\n    }\n}\nconst mapStateToProps=(state: StateTypes)=>{\n    return{\n      isLoading: state.isLoading,\n      articles: state.articles,\n      liked: state.liked\n    };\n  }\n    \n  export default connect(mapStateToProps)(Display);\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from 'react-redux';\nimport { StateTypes } from '../Redux/Reducers';\n\ninterface Props{\n  code: string,\n  onChange: Function,\n  country: string,\n  currentCountry: string\n}\nclass ButtonCountry extends React.Component<Props>{\n\n\n    render(){\n        return (\n            <Button variant= {(this.props.currentCountry === this.props.code) ? \"dark\" : \"light\"} \n              onClick={()=>this.props.onChange(this.props.code)}>\n                {this.props.country}\n            </ Button>\n        )\n    }\n}\n\nconst mapStateToProps= (state: StateTypes) =>{\n    return{\n      currentCountry: state.country ,\n    };\n  }\n  \nexport default connect(mapStateToProps,)(ButtonCountry);\n  ","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport {withRouter} from 'react-router-dom';\nimport Button from  'react-bootstrap/Button';\nimport {connect} from 'react-redux';\nimport * as actiontypes from '../Redux/Actions';\nimport { StateTypes } from '../Redux/Reducers';\n\n\ninterface Props{\n  setLoginStatus: Function,\n  setUserId: Function,\n  setCookieLoad: Function,\n  history: any,\n  firebase: any\n}\n\nclass SignOutButton extends React.Component<Props>{\n  constructor(props: Props){\n    super(props);\n    this.signOut=this.signOut.bind(this);\n  }\n\n  signOut(){\n    this.props.firebase.doSignOut();\n    this.props.setLoginStatus(false);\n    this.props.setUserId(null);\n    this.props.setCookieLoad(false);\n    this.props.cookies.set('User','None');\n    this.props.cookies.set('Name','No Name');\n    this.props.history.push('/SignIn');\n  }\n\n  render(){\n    return (\n      <Button variant='danger' style={{marginLeft: 10}}\n        type='button' onClick={this.signOut}>\n          Sign Out\n      </Button>\n    )\n  }\n\n}\n\nconst mapStateToProps=(state: StateTypes)=>{\n  return{\n    isLoggedIn: state.isLoggedIn,\n    uid: state.uid,\n  };\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return{\n    setLoginStatus: (val: boolean)=>dispatch(actiontypes.setLoginStatus(val)),\n    setUserId: (val: string)=>dispatch(actiontypes.setUserId(val)),\n    setCookieLoad: (val: boolean)=>dispatch(actiontypes.setCookieLoad(val))\n  };\n}\n \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withFirebase(SignOutButton)));","import React from 'react'\nimport './head.css'\nimport ButtonCountry from \"../Buttons/ButtonCountry\"\nimport Button from 'react-bootstrap/Button'\nimport * as actiontypes from '../Redux/Actions';\nimport {connect} from 'react-redux';\nimport {fetchNews,fetchNewsSearch} from '../NewsFetch/Fetch';\nimport SignOutButton from '../Auth/Signout';\nimport { StateTypes } from '../Redux/Reducers';\n\ninterface Props{\n  setLoading: Function,\n  setCountry: Function,\n  setArticles: Function,\n  setPage: Function,\n  setNewsEnd: Function,\n  setErrorExist: Function,\n  page: number\n}\n\nclass Head extends React.Component<Props>{\n\t  public fetchNews: Function;\n\t  public fetchNewsSearch: Function;\n\t  public props: Props;\n\t  public input: any;\n\n    constructor(props: Props){\n      super(props);\n      this.onChange=this.onChange.bind(this);\n      this.fetchNews=fetchNews.bind(this);\n      this.fetchNewsSearch=fetchNewsSearch.bind(this);\n\n      this.searchNews=this.searchNews.bind(this);\n    }\n\n    async searchNews (search: string)\n    {\n      await this.props.setLoading(true);\n      await this.props.setCountry(\"\");\n      await this.props.setArticles([]);\n      await this.props.setPage(1);\n      await this.props.setNewsEnd(false);\n      await this.props.setErrorExist(false);\n      this.fetchNewsSearch(search,this.props.page);\n    }\n\n\n    handleSubmit = (event: any) => {\n      event.preventDefault();\n      this.searchNews(this.input.value);\n      event.target.reset();\n    };\n    \n\n    async onChange(code: string)\n    {\n      await this.props.setLoading(true);\n      await this.props.setCountry(code);\n      await this.props.setArticles([]);\n      await this.props.setPage(1);\n      await this.props.setNewsEnd(false);\n      await this.props.setErrorExist(false);\n      this.fetchNews();\n    }\n\n    render(){\n        return (\n            <div>\n                <div className='Head'>\n                  <div className='row'>\n                    <div className='column'>\n                        <h1 align=\"center\"> Simple News App</h1>\n                    </div>\n                    \n                  </div>\n                    <div className='Search' align = \"center\">\n                        <form id=\"Search-form\" onSubmit={this.handleSubmit}>\n                          <label htmlFor=\"search\"><h6>Search for News : </h6> </label>\n                          <input\n                            type=\"text\"\n                            name=\"search\"\n                            ref={(input) => this.input = input}\n                          />\n                          <Button variant='outline-light'\n                            type='submit'>\n                            Submit \n                          </Button>\n                          <SignOutButton cookies={this.props.cookies}/>\n                        </form>\n                    </div>\n                </div>\n                <div className='Select'>\n                  <ButtonCountry  onChange={this.onChange} country=\"Australia\" code=\"au\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Argentina\" code=\"ar\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Belgium\" code=\"be\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Canada\" code=\"ca\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"China\" code=\"cn\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Egypt\" code=\"eg\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"France\" code=\"fr\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Germany\" code=\"de\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Italy\" code=\"it\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"India\" code=\"in\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Japan\" code=\"jp\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Malaysia\" code=\"my\"/> \n                  <ButtonCountry  onChange={this.onChange} country=\"Mexico\" code=\"mx\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Russia\" code=\"ru\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Sweden\" code=\"se\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"Switzerland\" code=\"ch\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"UK\" code=\"gb\"/>\n                  <ButtonCountry  onChange={this.onChange} country=\"USA\" code=\"us\"/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state: StateTypes,ownprops)=>{\n    return{\n      isLoading: state.isLoading,\n      country: state.country ,\n      errorExist: state.errorExist,\n      articles: state.articles,\n      page: state.page,\n      cookies: ownprops.cookies\n    };\n  }\n  \n  const mapDispatchToProps=dispatch=>{\n    return{\n      setLoading: (val: boolean)=>dispatch(actiontypes.setLoading(val)),\n      setNewsEnd: (val: boolean)=>dispatch(actiontypes.setNewsEnd(val)),\n      setArticles: (val: Array<string>)=>dispatch(actiontypes.setArticles(val)),\n      setErrorExist: (val: boolean)=>dispatch(actiontypes.setErrorExist(val)),\n      setCountry: (val: string)=>dispatch(actiontypes.setCountry(val)),\n      setPage: (val: number)=>dispatch(actiontypes.setPage(val))\n    };\n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(Head);","import ClipLoader from 'react-spinners/ClipLoader';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport { StateTypes } from '../Redux/Reducers';\n\ninterface Props{\n    newsEnd: boolean;\n}\nclass Loader extends React.Component{\n\tpublic props: Object;\n\n    render(){\n        return (\n            <div align='center'>\n                <ClipLoader color={\"#123abc\"} size={50} loading={!this.props.newsEnd}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state: StateTypes)=>{\n    return{\n      newsEnd: state.newsEnd,\n    };\n  }\n  \nexport default connect(mapStateToProps)(Loader);","import React from 'react';\n\nconst ErrorHandler=()=>{\n    return (\n        <h1>Error Occurred While Fetching</h1>\n    );\n}\n\nexport default ErrorHandler;","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport * as actiontypes from '../Redux/Actions';\nimport {connect} from 'react-redux';\nimport { StateTypes } from \"../Redux/Reducers\";\nimport {List,ListItemText,ListItem} from '@material-ui/core';\nclass Receive extends React.Component{\n\n    constructor(props){\n      super(props);\n      this.state={\n        messages: []\n      }\n    }\n\n    componentDidMount(){\n      this.getMessages()\n    }\n\n    getMessages=()=>{\n      var ref=this.props.firebase.realDatabase.ref().child('messages').limitToLast(20);\n      ref.on('value',snapshot=>{\n        let newmessages=[]\n        snapshot.forEach(child=>{\n          var cur=child.val()\n          newmessages.push({message: cur.message, user: cur.userName})\n        })\n        this.setState({messages: newmessages});\n      })\n    }\n\n    rendermessages=()=>{\n      return this.state.messages.map(message=>(\n        <ListItem>\n          <ListItemText style={{wordBreak: \"break-word\"}} primary={message.user +' : ' + message.message}></ListItemText>\n        </ListItem>\n      ))\n    }\n\n    render(){\n        return(\n        <div >\n            <List>\n              {this.rendermessages()}\n            </List>\n        </div>\n        )\n    }\n}\n\n\nconst mapStateToProps=(state:StateTypes)=>{\n    return{\n      messages: state.messages,\n      uid: state.uid,\n    };\n  }\n  \nconst mapDispatchToProps=(dispatch: any)=>{\n  return{\n    setMessages: (val: Array<string>)=>dispatch(actiontypes.setMessages(val))\n  };\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withFirebase(Receive));\n  ","import React from \"react\";\nimport { withFirebase } from \"../Firebase\";\nimport * as actiontypes from '../Redux/Actions';\nimport {connect} from 'react-redux';\nimport { StateTypes } from \"../Redux/Reducers\";\nimport { TextField } from \"@material-ui/core\";\n\nconst INITIAL_STATE = {\n    message: ''\n  };\n\nclass Send extends React.Component{\n    constructor(props: Props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n      }\n\n    onSubmit = (event: any) => {\n        this.props.firebase.sendMessage(this.state.message,this.props.name)\n        event.preventDefault();\n      };\n\n    onChange = (event: any) => {\n      this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render(){\n      const{ message } = this.state;\n        return(\n        <div>\n            <form id=\"form\" onSubmit={this.onSubmit}>\n                <TextField\n                    id=\"text-field\"\n                    name=\"message\"\n                    value={message}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Enter Message\"\n                />\n              <button style={{marginBottom:20}} size='lg' variant=\"primary\" type=\"submit\">Send</button>\n          </form>\n        </div>\n\n        )\n    }\n}\n\n\n\n\n\nconst mapStateToProps=(state:StateTypes)=>{\n    return{\n      messages: state.messages,\n      uid: state.uid,\n      name: state.name\n    };\n  }\n\nconst mapDispatchToProps=(dispatch: any)=>{\n  return{\n    setMessages: (val: Array<string>)=>dispatch(actiontypes.setMessages(val))\n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withFirebase(Send));","import React from 'react'\nimport { withFirebase } from '../Firebase'\nimport Receive from './Receive'\nimport Send from './Send'\nimport './Chat.css'\nimport SplitPane from 'react-split-pane'\n\nclass ChatBox extends React.Component{\n\n    render(){\n        return(\n            <SplitPane split=\"horizontal\" default={300}>\n                <div className='messageWindow'>\n                    <Receive/>     \n                </div>\n                <div className='sendArea'>\n                    <Send/>\n                </div>\n            </SplitPane>\n        )\n    }\n\n}\n\nexport default withFirebase(ChatBox)\n","import React from 'react'\nimport Display from './Display';\nimport Head from '../Header/head';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport Loader from '../Loader/Loader'\nimport ErrorHandler from '../ErrorHandler/ErrorHandler';\nimport {fetchNews,fetchLiked} from '../NewsFetch/Fetch'\nimport * as actiontypes from '../Redux/Actions';\nimport {connect} from 'react-redux';\nimport {withFirebase} from '../Firebase'\nimport {StateTypes,DispatchTypes} from '../Redux/Reducers'\nimport { NewsPost } from '../Card/Post';\nimport ChatBox from '../Chat/ChatBox';\nimport SplitPane from 'react-split-pane'\nimport './Main.css'\n\ninterface MainProps extends DispatchTypes,StateTypes{\n  cookies: {get: Function, set:Function};\n}\n\nclass Main extends React.Component<MainProps>{\n    // public fetchNews: () => void\n    // public fetchLiked: () => void\n    \n    constructor(props:MainProps ){\n        super(props);\n        this.fetchNews = fetchNews.bind(this);\n        this.fetchLiked =fetchLiked.bind(this);\n        if((this.props.cookies).get('testing') === null || (this.props.cookies).get('testing') === undefined )\n        \t(this.props.cookies).set('testing',[],{path: '/'})\n      }    \n\n    async componentDidMount(){\n      await this.props.setCountry('in');\n      await this.props.setPage(1);\n      await this.props.setArticles([]);\n      this.fetchNews();\n      this.fetchLiked();\n    }\n\n    SelectiveDisplay(){\n        if(this.props.errorExist)\n          return <ErrorHandler />\n        else{\n          return(\n            <div>\n              <Display show='all' cookies={this.props.cookies}/> \n              <Loader />\n            </div>\n          );\n        }\n      }\n\n    render(){\n            return(\n                <div>\n                    {!this.props.newsEnd ? \n                        <BottomScrollListener debounce={3000} offset={10} onBottom={this.fetchNews}/>:<div/>}\n                    <div className='header'>\n                    <Head  cookies={this.props.cookies}/></div>\n                    <SplitPane split=\"vertical\" minSize={50} defaultSize={10000}>\n                      <div className='navigator'>\n                        <ChatBox/>\n                      </div>\n                      <div className='content'>\n                        {this.SelectiveDisplay()}\n                      </div>\n                    </SplitPane>\n                </div>\n            )}\n}\n\nconst mapStateToProps=(state:StateTypes,ownProps: {cookies: {get: Function, set: Function}})=>{\n    return{\n      newsEnd: state.newsEnd,\n      country: state.country,\n      page: state.page,\n      errorExist: state.errorExist,\n      cookies: ownProps.cookies,\n      isLoading: state.isLoading,\n      articles: state.articles,\n      uid: state.uid,\n    };\n  }\n  \nconst mapDispatchToProps=(dispatch: any)=>{\n  return{\n    setLoading: (val: Boolean)=>dispatch(actiontypes.setLoading(val)),\n    setNewsEnd: (val: Boolean)=>dispatch(actiontypes.setNewsEnd(val)),\n    setArticles: (val: Array<Object>)=>dispatch(actiontypes.setArticles(val)),\n    setErrorExist: (val: Boolean)=>dispatch(actiontypes.setErrorExist(val)),\n    setCountry: (val: string)=>dispatch(actiontypes.setCountry(val)),\n    setPage: (val: number)=>dispatch(actiontypes.setPage(val)),\n    setLiked: (val: Array<NewsPost>)=>dispatch(actiontypes.setLiked(val))\n  };\n}\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(withFirebase(Main));\n  ","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\ninterface State{\n    backgroundColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light'\n    textColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'white' | 'muted'\n}\ninterface SourceCardProps{\n    key: number\n    url: string\n    name: string\n    description: string\n}\n\nclass SourceCard extends React.Component<SourceCardProps>{\n    public state: State\n\n    constructor(props: SourceCardProps) {\n        super(props);\n        this.state = {\n          backgroundColor: \"light\",\n          textColor: 'dark'\n        };\n      }\n\n    enter = () =>{\n        this.setState({\n            backgroundColor: \"info\",\n            textColor: 'white'\n    })\n    }  \n    leave = () =>{\n        this.setState({\n            backgroundColor: \"light\",\n            textColor: 'dark'\n        })\n    }  \n    render(){\n        return(\n            <div>\n                <Card bg={this.state.backgroundColor}\n                    onMouseEnter={this.enter}\n                    onMouseLeave={this.leave}\n                    style={{width: '24rem'}}\n                    text={this.state.textColor}\n                    onClick={()=>window.open(this.props.url,'_blank')  }>\n                    <Card.Body>\n                        <Card.Title>{this.props.name}</Card.Title>\n                        <Card.Text>{this.props.description}</Card.Text>\n                    </Card.Body>    \n                </Card>\n            </div>    \n        )}\n}\n\nexport default SourceCard;","import React from 'react';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport SourceCard from './SourceCard';\nimport {NewsPost} from '../Card/Post'\n\ninterface SourcesProps{\n    array: Array<NewsPost>\n    loading: boolean\n}\n\nconst DisplaySources:React.FC<SourcesProps> =(props: SourcesProps )=>{\n    const array: Array<NewsPost> =props.array;\n    if(props.loading)\n        return <div></div>;\n    else{\n        return(     \n            <CardColumns align=\"center\"> \n                {array.map((source: NewsPost,idx: number) => (\n                    <SourceCard key={idx}  name={source.name} description={source.description} url={source.url} />\n                ))}\n            </CardColumns>\n        )\n    }\n}\n\nexport default DisplaySources;","import React, { Component } from 'react';\nimport DisplaySources from './DisplaySources';\nimport {connect} from 'react-redux';\nimport Head from '../Header/head'\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport {StateTypes} from '../Redux/Reducers'\nimport { NewsPost } from '../Card/Post';\n\ninterface SourcesProps{\n    country: string;\n}\n\ninterface State{\n    isLoading: boolean\n    sources: Array<NewsPost>\n    newsEnd: boolean\n}\n\nclass Sources extends Component<SourcesProps>{\n    public state: State\n\n    constructor(props: SourcesProps){\n        super(props);\n        this.state={\n            isLoading: true,\n            sources: [],\n            newsEnd: false\n        }\n        this.fetchSources=this.fetchSources.bind(this);\n    }\n\n    fetchSources(country=this.props.country){\n        const url: string=`https://tinyurl.com/news-appfk/news/?source=${country}`\n        fetch(url)\n        .then((response:{json: Function})=>response.json())\n        .then((result:{sources: Array<NewsPost>})=>result.sources)\n        .then((sources: Object)=> {\n          this.setState({sources: sources});\n          this.setState({isLoading: false});\n          this.setState({newsEnd: true});\n        })\n        .catch(error=>{\n          console.log(error);\n          this.setState({isLoading: false});\n          this.setState({newsEnd: true});\n        })\n    }\n\n    componentDidMount(){\n        this.fetchSources();\n    }\n\n    shouldComponentUpdate(nextProps: any) {\n        if( this.props.country !== nextProps.country)\n        {   \n            this.setState({isLoading: true})\n            this.setState({sources: []})\n            this.fetchSources(nextProps.country)\n        }\n        return true ;\n    }\n\n    render(){\n        return(\n            <div>\n                <Head /><br/>\n                <DisplaySources loading={this.state.isLoading} array={this.state.sources} />\n                <div align='center'>\n                    <ClipLoader color={\"#123abc\"} size={50} loading={this.state.isLoading}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state: StateTypes)=>{\n    return{\n        country: state.country\n    };\n}\n\nexport default connect(mapStateToProps)(Sources);","import React from 'react'\n\ninterface PersonProps{\n    name: string;\n    title: string;\n    imageSrc: string;\n}\n\nconst Person:React.FC<PersonProps> = (props: PersonProps) => {\n    return (\n        <div>\n            <div style ={{marginLeft:150, marginTop:50}}>\n                <img src={props.imageSrc} alt='' height={300}/>\n                    <div align='center'>\n                        <h2>{props.name}</h2>\n                        <p>{props.title}</p>\n                    </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\nimport Vinayak from '../../assets/Vinayak.jpeg';\nimport Anil from '../../assets/Anil.jpg';\nimport './Team.css'\n\nconst Info = () => {\n    return (\n        <div>\n            <div className=\"container\">\n                <h1 style={{marginTop: 10}}>Alone We Can Do So Little, Together We Can Do So Much.</h1>\n                <div  className='row'  >        \n                    <Person  name='Anil Bansal' imageSrc = {Anil} title='SDE Intern'/>\n                    <Person name='Vinayak Aggarwal' imageSrc = {Vinayak} title='SDE Intern'/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Info;","import React, { Component } from 'react';\nimport {withFirebase} from '../Firebase';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actiontypes from '../Redux/Actions';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from 'react-bootstrap/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport GoogleButton from 'react-google-button';\nimport {StateTypes} from '../Redux/Reducers'\n\nconst INITIAL_STATE = {\n    name: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n  };\n\ninterface Props{\n  setLoginStatus: Function,\n  setUserId: Function,\n  setCookieLoad: Function,\n  setLoading: Function,\n  cookies: Object,\n  history: any,\n  firebase: any,\n  isLoading: boolean\n}\n\nclass SignUpForm extends Component<Props> {\n\tpublic state: any;\n\tpublic props: Props;\n\tpublic email: string;\n\tpublic passwordOne: string;\n\tpublic passwordTwo: string;\n\tpublic error: any;\n\n    constructor(props: Props) {\n      super(props);\n      this.googleSignIn=this.googleSignIn.bind(this);\n      this.login=this.login.bind(this);\n      this.signInSync=this.signInSync.bind(this);\n      this.guestSignIn=this.guestSignIn.bind(this)\n      this.guestLogin=this.guestLogin.bind(this)\n      this.state = {...INITIAL_STATE};\n    }\n\n    login () {\n      this.props.setLoginStatus(true);\n    }\n\n    async signInSync ()\n    {\n      var uid: string = await this.props.firebase.getUID()\n      this.props.setUserId(uid);\n      var cookies: Array<string> = await this.props.firebase.getCookieFromDatabase(uid)\n      this.props.cookies.set('testing',cookies,{path: '/'});\n      this.props.setCookieLoad(true);\n      this.props.cookies.set('User',uid);\n    }\n\n    guestSignIn = () => {\n      this.props.setLoading(true) \n      this.props.firebase.doGuestSignIn()\n      .then(() => {\n        this.login();\n        this.setState({ ...INITIAL_STATE });\n        this.guestLogin()\n        .then(()=>{\n          this.props.history.push('/Main');\n        })\n      })\n      .catch((error: any) => {\n        this.props.setLoading(false)\n        this.setState({ error });\n      });\n    }\n\n    async guestLogin()\n    {\n      var uid: string = await this.props.firebase.getUID()\n      this.props.setUserId(uid);\n      this.props.setCookieLoad(true);\n      this.props.cookies.set('User',uid);\n    }\n\n      googleSignIn = () => {\n      this.props.setLoading(true)\n      this.props.firebase.doGoogleSignIn()\n      .then(() => {\n        this.login();\n        this.setState({ ...INITIAL_STATE });\n        this.signInSync()\n        .then(()=>{\n          this.props.history.push('/Main');\n        })\n      })\n      .catch((error: any) => {\n        this.props.setLoading(false)\n        this.setState({ error });\n      });\n    }\n\n    onSubmit = (event: any) => {\n      const { name, email, passwordOne } = this.state;\n      this.props.setLoading(true)\n      this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(() => {\n          this.login();\n          this.props.firebase.addName(name);\n          this.props.setName(name);\n          this.setState({ ...INITIAL_STATE });\n          this.props.setUserId(this.props.firebase.getUID());\n          this.props.firebase.addNewUser(this.props.firebase.getUID());\n          this.props.cookies.set('testing',[],{path: '/'});\n          this.props.cookies.set('User',this.props.uid);\n          this.props.history.push('/Main');\n        })\n        .catch((error: any) => {\n          this.props.setLoading(false)\n          this.setState({ error });\n        });\n   \n      event.preventDefault();\n    }\n   \n    onChange = (event: any) => {\n      this.setState({ [event.target.name]: event.target.value });\n    };\n\n    showPassword = () => {\n      var passwordComponent = document.getElementById('password');\n      if(passwordComponent.type === 'password') {\n        passwordComponent.type = 'text';\n      }\n      else if(passwordComponent.type === 'text') {\n        passwordComponent.type = 'password';\n      }\n\n      var confirmpasswordComponent=document.getElementById('confirmpassword');\n      if(confirmpasswordComponent.type === 'password') {\n        confirmpasswordComponent.type = 'text';\n      }\n      else if(confirmpasswordComponent.type === 'text') {\n        confirmpasswordComponent.type = 'password';\n      }\n    }\n   \n    render() {\n      const {\n          name,\n          email,\n          passwordOne,\n          passwordTwo,\n          error,\n      } = this.state;\n  \n      const isInvalid = \n              passwordOne !== passwordTwo || \n              passwordOne === '' || \n              email === '';\n  \n        return (\n        <Container component=\"main\" maxWidth=\"xs\" style={{marginTop:50}}>\n        <CssBaseline />\n        <div align='center'>\n          <Avatar >\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\" style={{marginBottom:20}}>\n            Sign Up\n          </Typography>\n          <BeatLoader color={\"#123abc\"} size={20} loading={this.props.isLoading} />\n\n          <div>\n            <form onSubmit={this.onSubmit}>\n              <div align='center'>\n                <TextField\n                    name=\"name\"\n                    value={name}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    variant=\"outlined\"\n                    style={{marginBottom:20}}\n                />\n                <TextField\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                    variant=\"outlined\"\n                    style={{marginBottom:20}}\n                />\n                <TextField\n                    name=\"passwordOne\"\n                    value={passwordOne}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    variant=\"outlined\"\n                    style={{marginBottom:20}}\n                    id=\"password\"\n                />\n                <TextField\n                    name=\"passwordTwo\"\n                    value={passwordTwo}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    variant=\"outlined\"\n                    style={{marginBottom:20}}\n                    id=\"confirmpassword\"\n                />\n                </div>\n\n                <input type=\"checkbox\" onClick={this.showPassword} style={{marginBottom:20}}/>\n                <span> Show Password</span><br/>\n\n              {isInvalid ? \n                  <Button style={{marginBottom:20}} size='lg' variant=\"secondary\" disabled>Register</Button>\n                : <Button style={{marginBottom:20}} size='lg' variant=\"primary\" type=\"submit\">Register</Button>\n              }\n    \n                {error && <h5 style={{marginTop:10}}>{error.message}</h5>}\n            </form>\n\n            <Button style={{paddingLeft:44, paddingRight:44, marginBottom:20}} size='lg' variant=\"warning\" \n            onClick={() => this.guestSignIn()}>\n                Sign Up as Guest\n            </Button>\n            <GoogleButton onClick={this.googleSignIn} />\n          </div></div>\n          </Container>\n      );\n    }\n  }\n\n\n\n  const mapStateToProps=(state: StateTypes)=>{\n    return{\n      isLoggedIn: state.isLoggedIn,\n      uid: state.uid,\n      isLoading: state.isLoading\n    };\n  }\n  \n  const mapDispatchToProps=dispatch=>{\n    return{\n      setLoginStatus: (val: boolean)=>dispatch(actiontypes.setLoginStatus(val)),\n      setUserId: (val: string)=>dispatch(actiontypes.setUserId(val)),\n      setCookieLoad: (val: boolean)=>dispatch(actiontypes.setCookieLoad(val)),\n      setLoading: (val: boolean)=>dispatch(actiontypes.setLoading(val)),\n      setName: (val: string)=>dispatch(actiontypes.setName(val))\n    };\n  }\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withFirebase(SignUpForm)))","import React from 'react';\nimport SignUpForm from './SignUpForm'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { StateTypes } from '../Redux/Reducers';\n\ninterface Props{\n    cookies: Object\n}\n\ninterface OwnProps{\n    cookies: Object\n}\n\nclass SignUpPage extends React.Component<Props>{\n\n    render(){\n        return(\n            <div>\n                <SignUpForm cookies={this.props.cookies}/>\n                <h5 align='center' style={{marginTop:30}}>\n                    Already have an account? <Link to='/Signin'>Sign In</Link>\n                </h5>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state: StateTypes,ownProps: OwnProps)=>{\n    return{\n     cookies: ownProps.cookies,\n    };\n  }\n  \nexport default connect(mapStateToProps)(SignUpPage);","import React, { Component } from 'react';\nimport {withFirebase} from '../Firebase';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actiontypes from '../Redux/Actions';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from 'react-bootstrap/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport GoogleButton from 'react-google-button';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport {StateTypes} from '../Redux/Reducers';\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n  };\n\ninterface Props{\n  setLoginStatus: Function,\n  setUserId: Function,\n  setCookieLoad: Function,\n  setLoading: Function,\n  setName: Function,\n  firebase: any,\n  history: any,\n  cookies: Object\n}\n\nclass SignInForm extends Component<Props> {\n\tpublic state: any;\n\tpublic props: Props;\n\tpublic email: string;\n\tpublic password: string;\n\tpublic error: any;\n\n    constructor(props: Props) {\n      super(props);\n      this.login=this.login.bind(this)\n      this.signInSync=this.signInSync.bind(this)\n      this.guestSignIn=this.guestSignIn.bind(this)\n      this.guestLogin=this.guestLogin.bind(this)\n      this.googleSignIn=this.googleSignIn.bind(this)\n\n      this.state = { ...INITIAL_STATE };\n    }\n\n    login () {\n     this.props.setLoginStatus(true);\n    }\n    \n    async signInSync ()\n    {\n      var uid: string = await this.props.firebase.getUID()\n      await this.props.firebase.getUserName(this.props.setName);\n      this.props.setUserId(uid);\n      var cookies: Array<string> = await this.props.firebase.getCookieFromDatabase(uid)\n      this.props.cookies.set('testing',cookies,{path: '/'});\n      this.props.setCookieLoad(true);\n      this.props.cookies.set('User',uid);\n      this.props.cookies.set('Name',this.props.name);\n    }\n\n    async guestLogin()\n    {\n      var uid: string = await this.props.firebase.getUID()\n      this.props.setUserId(uid);\n      this.props.setCookieLoad(true);\n      this.props.cookies.set('User',uid);\n      this.props.cookies.set('Name','Anonymous');\n\n    }\n\n    guestSignIn = () => {\n      this.props.setLoading(true)\n      this.props.firebase.doGuestSignIn()\n      .then(() => {\n        this.login();\n        this.setState({ ...INITIAL_STATE });\n        this.guestLogin()\n        .then(()=>{\n          this.props.history.push('/Main');\n        })\n      })\n      .catch((error: any) => {\n        this.props.setLoading(false)\n        this.setState({ error });\n      });\n    }\n\n    googleSignIn = () => {\n      this.props.setLoading(true)\n      this.props.firebase.doGoogleSignIn()\n      .then(() => {\n        this.login();\n        this.setState({ ...INITIAL_STATE });\n        this.signInSync()\n        .then(()=>{\n          this.props.history.push('/Main');\n        })\n      })\n      .catch((error: any) => {\n        this.props.setLoading(false)\n        this.setState({ error });\n      });\n    }\n\n    onSubmit = (event: any) => {\n      this.props.setLoading(true)\n      const { email, password } = this.state;    \n      this.props.firebase\n        .doSignInWithEmailAndPassword(email, password)\n        .then(() => {\n          this.login();\n          this.setState({ ...INITIAL_STATE });\n          this.signInSync( )\n          .then(()=>{\n            this.props.history.push('/Main');\n          })\n        })\n        .catch((error: any) => {\n          this.props.setLoading(false)\n          this.setState({ error });\n        });\n      \n      event.preventDefault();\n    };\n   \n    onChange = (event: any) => {\n      this.setState({ [event.target.name]: event.target.value });\n    };\n\n    showPassword = () => {\n      var passwordComponent = document.getElementById('pass');\n      if(passwordComponent.type === 'password') {\n        passwordComponent.type = 'text';\n      }\n      else if(passwordComponent.type === 'text') {\n        passwordComponent.type = 'password';\n      }\n    }\n   \n    render() {\n      const { email, password, error } = this.state;\n      const isInvalid = password === '' || email === '';\n\n      return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div align='center' style={{marginTop:50}}>\n          <Avatar >\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\" style={{marginBottom:20}}>\n            Sign In\n          </Typography>\n            <BeatLoader color={\"#123abc\"} size={20} loading={this.props.isLoading} />\n          <form onSubmit={this.onSubmit} style={{marginTop:10}}>\n          <div  align='center'>\n            <TextField\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n              style={{marginBottom:20}}\n              variant=\"outlined\"\n                  \n            />\n            <TextField\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n              variant=\"outlined\"\n              id='pass'\n                  style={{marginBottom:15}}\n            />\n          </div>\n            <input type=\"checkbox\" onClick={this.showPassword} style={{marginBottom:20}}/>\n            <span> Show Password</span><br/>\n             \n            {isInvalid ? \n                <Button style={{marginBottom:20}} size='lg' variant=\"secondary\" disabled>Login</Button>\n              : <Button style={{marginBottom:20}} size='lg' variant=\"primary\" type=\"submit\">Login</Button>\n            }\n                                    \n            {error && <h4>{error.message}</h4>}\n          </form>\n          <Button style={{paddingLeft:44, paddingRight:44, marginBottom:20}} size='lg' variant=\"warning\" \n            onClick={() => this.guestSignIn()}>\n              Sign In as Guest\n          </Button>\n          <GoogleButton onClick={this.googleSignIn} /> \n        </div>\n        </Container>\n      );\n    }\n  }\n\n  const mapStateToProps=(state: StateTypes)=>{\n    return{\n      isLoggedIn: state.isLoggedIn,\n      uid: state.uid,\n      isLoading: state.isLoading,\n      name: state.name\n    };\n  }\n  \n  const mapDispatchToProps=dispatch=>{\n    return{\n      setLoginStatus: (val: boolean)=>dispatch(actiontypes.setLoginStatus(val)),\n      setUserId: (val: string)=>dispatch(actiontypes.setUserId(val)),\n      setCookieLoad: (val: boolean)=>dispatch(actiontypes.setCookieLoad(val)),\n      setLoading: (val: boolean)=>dispatch(actiontypes.setLoading(val)),\n      setName: (val: string)=>dispatch(actiontypes.setName(val))\n    };\n  }\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(withFirebase(SignInForm)))","import React from 'react';\nimport SignInForm from './SignInForm'\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { StateTypes } from '../Redux/Reducers';\n\ninterface Props{\n    cookies: Object\n}\n\ninterface OwnProps{\n    cookies: Object\n}\n\nclass SignInPage extends React.Component<Props>{\n\n    render(){\n        return(\n            <div>\n                <SignInForm cookies={this.props.cookies}/>\n                <h5 align='center' style={{marginTop:30}}>\n                    Dont have an account? <Link to='/'>Sign Up</Link>\n                </h5>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state: StateTypes,ownProps: OwnProps)=>{\n    return{\n     cookies: ownProps.cookies,\n    };\n}\n  \nexport default connect(mapStateToProps)(SignInPage);","import React from 'react';\nimport Display from '../MainBody/Display'\nimport {connect} from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { withCookies } from 'react-cookie';\nimport * as actiontypes from '../Redux/Actions';\nimport Toast from 'react-bootstrap/Toast'\nimport Button from 'react-bootstrap/Button'\n\ninterface ProfileProps{\n    cookies: Object\n}\n\nclass Profile extends React.Component<ProfileProps>{\n\n    constructor(props: Props) {\n        super(props);\n        this.undoUnlike=this.undoUnlike.bind(this)\n      }\n  \n    undoUnlike () {\n        var likedPosts: Array<string> = (this.props.cookies).get('testing');\n        this.props.setToast(false);\n        // eslint-disable-next-line\n        {this.props.setLiked([...this.props.liked,this.props.lastLiked])}\n        (this.props.cookies).set('testing',[...likedPosts,this.props.lastLiked.url],{path: '/'})\n        this.props.firebase.addCookieToDatabase(this.props.uid,[...likedPosts,this.props.lastLiked.url],[...this.props.liked,this.props.lastLiked])\n    }\n    \n    removeToast = () => this.props.setToast(false)\n\n    render(){\n        return(\n            <div align='center'>                \n                <Toast show={this.props.showToast} onClose={this.removeToast} delay={3000} autohide>\n                    <Toast.Header align='center'>\n                        <h5>Undo Last UnLike???</h5>\n                        <Button variant='danger' size='sm' style={{marginLeft:20,marginRight:20}} \n                                onClick={() => this.undoUnlike()}>Undo</Button>\n                    </Toast.Header>\n                </Toast>\n                <Display show='likedOnly' cookies={this.props.cookies}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state,ownProps)=>{\n    return{\n      lastLiked: state.lastLiked,\n      liked: state.liked,\n      uid: state.uid,\n      cookie: ownProps.cookie,\n      showToast: state.showToast\n    };\n  }\n\nconst mapDispatchToProps=dispatch=>{\n    return{\n        setLiked: (val)=>dispatch(actiontypes.setLiked(val)),\n        setLastLiked: (val)=>dispatch(actiontypes.setLastLiked(val)),\n        setToast: (val)=>dispatch(actiontypes.setToast(val)),\n    };\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(withCookies(withFirebase(Profile)));\n  ","import React, {Component} from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport * as actiontypes from './components/Redux/Actions';\nimport {fetchNews} from './components/NewsFetch/Fetch'\nimport Main from './components/MainBody/Main'\nimport {BrowserRouter,Link,Route, Switch,} from 'react-router-dom';\nimport Sources from './components/Sources/Sources';\nimport Info from './components/TeamPage/TeamInfo';\nimport { withCookies } from 'react-cookie';\nimport SignUpPage from './components/Auth/SignUpPage'\nimport  SignInPage from './components/Auth/SignInPage';\nimport Profile from './components/UserPage/Profile'\nimport {withFirebase} from './components/Firebase';\n\nclass App extends Component{\n\tpublic fetchNews: any;\n\tpublic props: any;\n\n  constructor(props){\n    super(props);\n    this.fetchNews=fetchNews.bind(this);\n  }\n\n  async signInSync (uid)\n  {\n      this.props.setUserId(uid);\n      var cookies: Array<string> = await this.props.firebase.getCookieFromDatabase(uid)\n      this.props.cookies.set('testing',cookies,{path: '/'});\n      this.props.setCookieLoad(true);\n      this.props.cookies.set('User',uid);\n      this.props.setLoginStatus(true);\n      var name: string=await this.props.cookies.get('Name');\n      this.props.setName(name);\n  }\n\n  async checkPrevLogin(){\n    var uid=await this.props.cookies.get('User');\n    if(uid && uid!=='None'){\n      this.signInSync(uid);\n    }\n    if(!uid){this.props.cookies.set('User','None',{path: '/'})}\n  }\n\n  componentDidMount(){\n    this.checkPrevLogin();\n  }\n\n  render(){\n    return(\n      <BrowserRouter>\n      <div>\n        <div className='Top'>\n          <Link to=\"/\" className='Route'>SignUp  </Link>\n          <Link to=\"/SignIn\" className='Route'>Sign In</Link>\n          <Link to=\"/Main\" className='Route'>NewsFetch</Link>\n          <Link to=\"/Sources\" className='Route'>Sources</Link>\n          <Link to=\"/Team\" className='Route'>Team Info</Link>\n          <Link to=\"/Profile\" className='Route'>Favourites</Link>\n\n        </div>\n          <Switch>\n            <Route exact path=\"/\" render={() => (<SignUpPage cookies={this.props.cookies}/>)}/>\n            <Route exact path=\"/SignIn\" render={() => (<SignInPage cookies={this.props.cookies}/>)}/>\n            {this.props.isLoggedIn &&(\n              <div>\n                <Route exact path=\"/Main\" render={() => (<Main cookies={this.props.cookies}/>)}/>\n                <Route exact path=\"/Sources\" component={Sources}/>\n                <Route exact path=\"/Team\" component={Info}/>\n                <Route exact path=\"/Profile\" render={() => (<Profile content='likedOnly' cookies={this.props.cookies}/> )}/>\n              </div>)\n            } \n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    isLoading: state.isLoading,\n    page: state.page,\n    country: state.country ,\n    articles: state.articles,\n    newsEnd: state.newsEnd,\n    errorExist: state.errorExist,\n    isLoggedIn: state.isLoggedIn\n  };\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return{\n    setLoading: (val)=>dispatch(actiontypes.setLoading(val)),\n    setNewsEnd: (val)=>dispatch(actiontypes.setNewsEnd(val)),\n    setArticles: (val)=>dispatch(actiontypes.setArticles(val)),\n    setErrorExist: (val)=>dispatch(actiontypes.setErrorExist(val)),\n    setCountry: (val)=>dispatch(actiontypes.setCountry(val)),\n    setPage: (val)=>dispatch(actiontypes.setPage(val)),\n    setLoginStatus: (val)=>dispatch(actiontypes.setLoginStatus(val)),\n    setUserId: (val: string)=>dispatch(actiontypes.setUserId(val)),\n    setCookieLoad: (val: boolean)=>dispatch(actiontypes.setCookieLoad(val)),\n    setName: (val: string)=>dispatch(actiontypes.setName(val))\n  };\n}\n\nexport default withCookies(connect(mapStateToProps,mapDispatchToProps)((withFirebase(App))));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {CHANGE_COUNTRY,SET_ARTICLES,CUR_PAGE,LOADING,SET_ERROREXIST,SET_NEWSEND,\n        SET_LOGIN,SET_UID,SET_COOKIE_LOAD,SET_LIKED,SET_LAST_LIKED, SET_MESSAGES,SET_TOAST,SET_NAME } from './Actions'\nimport {NewsPost} from '../Card/Post'\n\nexport interface StateTypes{\n    isLoading?: Boolean\n    page?: number\n    country?: string\n    articles: Array<NewsPost>\n    liked: Array<NewsPost>\n    newsEnd?: Boolean\n    errorExist?: Boolean\n    isLoggedIn?: Boolean\n    uid?: string\n    cookieLoaded?: Boolean\n    name?:string\n}\n\nexport interface DispatchTypes{\n    setCountry? : Function\n    setPage? : Function\n    setArticles? : Function\n    setLiked? : Function\n    setLoading? : Function\n    setNewsEnd? : Function\n    setLoginStatus? : Function\n    setUserId? : Function\n    setCookieLoad? : Function\n    setErrorExist? : Function\n}\n\n\nconst initialState: StateTypes ={\n    isLoading: false,\n    page: 1,\n    country: 'in',\n    articles:[],\n    liked:[],\n    newsEnd: false,\n    errorExist: false, \n    isLoggedIn: false,\n    uid: \"\",\n    cookieLoaded: false,\n    messages: [],\n    lastLiked: '',\n    showToast: false,\n    name: ''\n}\n\nfunction newsApp(state: StateTypes = initialState, action: any) {\n    switch (action.type) {\n        case LOADING:\n            return Object.assign({}, state,{\n                isLoading: action.val,\n            })\n        case CHANGE_COUNTRY:\n            return Object.assign({}, state,{\n                country: action.val,\n            })\n        case SET_NEWSEND:\n            return Object.assign({}, state,{\n                newsEnd: action.val\n            })\n        case SET_ARTICLES:\n            return Object.assign({}, state,{\n                articles: action.val,\n            })\n        case SET_LIKED:\n            return Object.assign({}, state,{\n                liked: action.val,\n            })\n        case CUR_PAGE:\n            return Object.assign({}, state,{\n                page: action.val,\n            })\n        case SET_ERROREXIST:\n            return Object.assign({}, state,{\n                errorExist: action.val,\n            })\n        case SET_LOGIN:\n            return Object.assign({}, state,{\n                isLoggedIn: action.val,\n            })\n        case SET_TOAST:\n            return Object.assign({}, state,{\n                showToast: action.val,\n            })\n        case SET_UID:\n            return Object.assign({}, state,{\n                uid: action.val,\n            })\n        case SET_COOKIE_LOAD:\n            return Object.assign({}, state,{\n                cookieLoaded: action.val,\n            })\n        case SET_MESSAGES:\n            return Object.assign({}, state,{\n                messages: action.val,\n            })\n        case SET_LAST_LIKED:\n            return Object.assign({}, state,{\n                lastLiked: action.val,\n            })\n        case SET_NAME:\n            return Object.assign({},state,{\n                name: action.val\n            })\n        default:\n          return state\n      }\n  }\n\nexport default newsApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport newsApp from './components/Redux/Reducers';\nimport  {Provider} from 'react-redux';\nimport { CookiesProvider } from 'react-cookie';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nconst store=createStore(newsApp);\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <CookiesProvider>\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>\n    </CookiesProvider>\n  </FirebaseContext.Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}